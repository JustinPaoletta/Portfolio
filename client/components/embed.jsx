import React from 'react';

export let MediumPosts = [
    ['Algorithm — quickSort', <iframe src="https://drive.google.com/file/d/1KL6Adf2pX_cVANfGgQrCMvU7oiZsWmku/preview" width="640" height="480"></iframe>],
    ['Algorithm — bubbleSort', <blockquote className="embedly-card"><h4><a href="https://medium.com/algorithm-series/algorithm-bubblesort-91e53b639be3">Algorithm - bubbleSort</a></h4><p>Solved with javascript bubbleSort([2,5,3]) returns [2, 3, 5] bubbleSort([4,3,7,2,1]) returns [1, 2, 3, 4, 7] None you need to worry about accounting for First let's layout the skeleton of this problem. It's a pretty common pattern you will see when using recursion in your code.</p></blockquote>],
    ['Algorithm — commonLastVowel', <blockquote className="embedly-card"><h4><a href="https://medium.com/algorithm-series/algorithm-commonlastvowel-95176d35717c">Algorithm - commonLastVowel</a></h4><p>Nothing to worry about here we are only taking in strings that will have a most common last vowel, so we won't ever run into a case where we have more than one most common. The first thing we will do...</p></blockquote>],
    ['Algorithm — fibonacciNum', <blockquote className="embedly-card"><h4><a href="https://medium.com/algorithm-series/algorithm-fibonaccinum-bdf20c509816">Algorithm - fibonacciNum</a></h4><p>A Fibonacci sequence is a list of numbers that starts with 0 and 1, and every following number in the list is the sum of the previous two numbers. The first thing we need to do inside our function is...</p></blockquote>],
    ['Algorithm — longestStretch', <blockquote className="embedly-card"><h4><a href="https://medium.com/algorithm-series/algorithm-longeststretch-79150b0d1eb3">Algorithm - longestStretch</a></h4><p>Start by handling the first edge case, an empty string.</p></blockquote>],
    ['Algorithm — countIslands', <blockquote className="embedly-card"><h4><a href="https://medium.com/algorithm-series/algorithm-countislands-f6f500604223">Algorithm - countIslands</a></h4><p>Solved with javascript You must write a function that : Given a 2d map represented by a string, return the number of islands in that map. Land is represented by a 1, water by a 0. Spaces are considered connected if they touch horizontally or vertically, but not diagonal.</p></blockquote>],
    ['Algorithm — reverseNumber', <blockquote className="embedly-card"><h4><a href="https://medium.com/algorithm-series/algorithm-reversenumber-e399cc1fa69d">Algorithm - reverseNumber</a></h4><p>Solved with javascript You must write a function that : Takes in a positive integer and returns its digits in reverse order, without converting anything into a string. ONLY use math! reverseNumber(7856) returns 6587=====================reverseNumber(43589) returns 98534 None to be concerned with. We are only working with positive integers.</p></blockquote>],
    ['Deploying a NodeJS — React Application on Heroku', <blockquote className="embedly-card"><h4><a href="https://medium.com/@justinpaoletta_dev/deploying-a-nodejs-react-application-on-heroku-d58322be18ad">Deploying a NodeJS - React Application on Heroku</a></h4><p>This tutorial will teach you how to take a local git repository and run it on https://www.heroku.com/ The only thing we need to do inside this file is set a web process that will run our server. Make...</p></blockquote>],
    ['Setup a React App From Scratch', <blockquote className="embedly-card"><h4><a href="https://medium.com/@justinpaoletta_dev/setup-a-react-app-from-scratch-22b59d417202">Setup a React App From Scratch</a></h4><p>That means WITHOUT create-react-app Create React App can be a very useful tool if you want to get started with React as quickly as possible. It can however be buggy, and if you always set up your applications by using an automated tool then you're not really learning how React works.</p></blockquote>],
    ['Setup an Express Server From Scratch', <blockquote className="embedly-card"><h4><a href="https://medium.com/@justinpaoletta_dev/setup-an-express-server-from-scratch-26b4fa376ade">Setup an Express Server From Scratch</a></h4><p>Learn how to build a working server with Express in less than 5 mins Step One - Require Express const express = require('express'); Step Two - Set Host and Port const host = 'localhost'; ( or whatever IP address ) const port = '6500'; ( almost any number you want</p></blockquote>],
]
